#!/bin/ksh

# exit immediately if a command exits with a non-zero status
set -e

# set OpenBSD version supported without the dot
readonly VER=63

# create the rollback folder
mkdir -p rollback

# remove the rollback folder on ctrl-c if no file etc.policy present
trap '[[ -r rollback/etc.policy ]] || rm -rf ./rollback' INT

# handle errors
err()
{
  echo "${0##*/}: ${1}" >&2 && return "${2:-1}"
}

# wrapper for executing commands
docmd()
{
  if [[ -n ${DRYRUN} ]]; then
    echo "$@"
  else
    "$@" >/dev/null 2>&1
  fi
}

# install all libraries (opensmtpd, dovecot ...)
install_all()
{
  for i in ./lib/??_* ; do
    . "$i"
    "${i#*_}"_lib
  done
}

usage()
{
  echo "Usage: ${0##*/} [-dn] [library]"
  echo
  echo "  -d :\tDebugmode. Print commands and parameter assignments"
  echo "\twhen they are executed."
  echo 
  echo "  -n :\tNot executing commands just print out what will happen."
  err "\tThis mode is also known as dry-run."
}

# Backup configuration file to /etc/examples
backup()
{
  local _filename="${1##*/}"
  if [[ -f $1 ]]; then
    [[ -f rollback/$_filename ]] || docmd cp -p "$1" rollback
  fi
}

check_system()
{
  local _rc=/etc/rc.conf.local

  # exit this function if etc.policy is present
  [[ -r rollback/etc.policy ]] && return

  # backup /etc/rc.conf.local
  [[ -r $_rc ]] && backup $_rc

  # save running daemons
  /usr/sbin/rcctl ls started > rollback/started

  # create a specification file for /etc
  /usr/sbin/mtree -c -k uid,gid,mode,sha256digest -p \
    /etc > rollback/etc.policy
}

# are you using the good release ?
(($(uname -r | tr -d .) != VER)) && \
  err "this release is not supported"

# the syntax
while getopts :dn opt; do
  case ${opt} in
    d) set -x && readonly DEBUG=1;;    # Debug mode when -d is present
    n) readonly DRYRUN=1;;             # Not executing commands
    *) usage;;
  esac
done

# dry-run not compatible with rollback
[[ $DRYRUN == 1 ]] && [[ $2 == "rollback" ]] && \
  err "dry-run is not compatible with the rollback feature"

# running in dry-run mode?
[[ -n ${DRYRUN} ]] && echo "Doing a dry-run - Not executing commands" 

# only root can run this scipt if we are not in dry-run mode
(($(id -u) != 0)) && ((DRYRUN != 1)) && err "need root privileges" 

# we remove an option
shift $((OPTIND - 1))

# only one library allowed, or empty library
(($# > 1)) && usage

# check running system
check_system

# create a rollback library
readonly ROLLBACK=./lib/rollback
[[ -f $ROLLBACK ]] || touch $ROLLBACK && chmod +x $ROLLBACK

# if no library mentioned we install all, otherwise, we just install 
# the library present in $1
if [[ -z $1 ]]; then
  install_all
else
  # does this library exist ?
  [[ -f ./lib/$1 ]] || err "this library doesn't exist"
  # install the unique library
  if [[ $1 == rollback ]]; then
    ./lib/$1
    rm ./lib/$1
  else
    . ./lib/$1
    "${1#*_}"_lib
  fi
fi
